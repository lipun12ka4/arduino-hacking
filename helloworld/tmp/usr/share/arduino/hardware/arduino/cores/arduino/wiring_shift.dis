
tmp//usr/share/arduino/hardware/arduino/cores/arduino/wiring_shift.o:     file format elf32-avr


Disassembly of section .text.shiftIn:

00000000 <shiftIn>:
   0:	a0 e0       	ldi	r26, 0x00	; 0
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	e0 e0       	ldi	r30, 0x00	; 0
   6:	f0 e0       	ldi	r31, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <shiftIn>
   c:	d8 2e       	mov	r13, r24
   e:	e6 2e       	mov	r14, r22
  10:	c4 2e       	mov	r12, r20
  12:	c7 e0       	ldi	r28, 0x07	; 7
  14:	d0 e0       	ldi	r29, 0x00	; 0
  16:	f1 2c       	mov	r15, r1
  18:	07 e0       	ldi	r16, 0x07	; 7
  1a:	10 e0       	ldi	r17, 0x00	; 0
  1c:	61 e0       	ldi	r22, 0x01	; 1
  1e:	8e 2d       	mov	r24, r14
  20:	0e 94 00 00 	call	0	; 0x0 <shiftIn>
  24:	8d 2d       	mov	r24, r13
  26:	c1 10       	cpse	r12, r1
  28:	00 c0       	rjmp	.+0      	; 0x2a <shiftIn+0x2a>
  2a:	0e 94 00 00 	call	0	; 0x0 <shiftIn>
  2e:	98 01       	movw	r18, r16
  30:	2c 1b       	sub	r18, r28
  32:	3d 0b       	sbc	r19, r29
  34:	00 c0       	rjmp	.+0      	; 0x36 <shiftIn+0x36>
  36:	0e 94 00 00 	call	0	; 0x0 <shiftIn>
  3a:	2c 2f       	mov	r18, r28
  3c:	00 c0       	rjmp	.+0      	; 0x3e <shiftIn+0x3e>
  3e:	88 0f       	add	r24, r24
  40:	2a 95       	dec	r18
  42:	02 f4       	brpl	.+0      	; 0x44 <shiftIn+0x44>
  44:	f8 2a       	or	r15, r24
  46:	60 e0       	ldi	r22, 0x00	; 0
  48:	8e 2d       	mov	r24, r14
  4a:	0e 94 00 00 	call	0	; 0x0 <shiftIn>
  4e:	21 97       	sbiw	r28, 0x01	; 1
  50:	00 f4       	brcc	.+0      	; 0x52 <shiftIn+0x52>
  52:	8f 2d       	mov	r24, r15
  54:	cd b7       	in	r28, 0x3d	; 61
  56:	de b7       	in	r29, 0x3e	; 62
  58:	e8 e0       	ldi	r30, 0x08	; 8
  5a:	0c 94 00 00 	jmp	0	; 0x0 <shiftIn>

Disassembly of section .text.shiftOut:

0000005e <shiftOut>:
  5e:	a0 e0       	ldi	r26, 0x00	; 0
  60:	b0 e0       	ldi	r27, 0x00	; 0
  62:	e0 e0       	ldi	r30, 0x00	; 0
  64:	f0 e0       	ldi	r31, 0x00	; 0
  66:	0c 94 00 00 	jmp	0	; 0x0 <__tmp_reg__>
  6a:	c8 2e       	mov	r12, r24
  6c:	d6 2e       	mov	r13, r22
  6e:	b4 2e       	mov	r11, r20
  70:	c7 e0       	ldi	r28, 0x07	; 7
  72:	d0 e0       	ldi	r29, 0x00	; 0
  74:	02 2f       	mov	r16, r18
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	87 e0       	ldi	r24, 0x07	; 7
  7a:	e8 2e       	mov	r14, r24
  7c:	f1 2c       	mov	r15, r1
  7e:	b1 10       	cpse	r11, r1
  80:	00 c0       	rjmp	.+0      	; 0x82 <shiftOut+0x24>
  82:	f7 01       	movw	r30, r14
  84:	ec 1b       	sub	r30, r28
  86:	fd 0b       	sbc	r31, r29
  88:	b8 01       	movw	r22, r16
  8a:	00 c0       	rjmp	.+0      	; 0x8c <shiftOut+0x2e>
  8c:	75 95       	asr	r23
  8e:	67 95       	ror	r22
  90:	ea 95       	dec	r30
  92:	02 f4       	brpl	.+0      	; 0x94 <shiftOut+0x36>
  94:	00 c0       	rjmp	.+0      	; 0x96 <shiftOut+0x38>
  96:	b8 01       	movw	r22, r16
  98:	0c 2e       	mov	r0, r28
  9a:	00 c0       	rjmp	.+0      	; 0x9c <shiftOut+0x3e>
  9c:	75 95       	asr	r23
  9e:	67 95       	ror	r22
  a0:	0a 94       	dec	r0
  a2:	02 f4       	brpl	.+0      	; 0xa4 <shiftOut+0x46>
  a4:	61 70       	andi	r22, 0x01	; 1
  a6:	77 27       	eor	r23, r23
  a8:	8c 2d       	mov	r24, r12
  aa:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  ae:	61 e0       	ldi	r22, 0x01	; 1
  b0:	8d 2d       	mov	r24, r13
  b2:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  b6:	60 e0       	ldi	r22, 0x00	; 0
  b8:	8d 2d       	mov	r24, r13
  ba:	0e 94 00 00 	call	0	; 0x0 <__tmp_reg__>
  be:	21 97       	sbiw	r28, 0x01	; 1
  c0:	00 f4       	brcc	.+0      	; 0xc2 <shiftOut+0x64>
  c2:	cd b7       	in	r28, 0x3d	; 61
  c4:	de b7       	in	r29, 0x3e	; 62
  c6:	e9 e0       	ldi	r30, 0x09	; 9
  c8:	0c 94 00 00 	jmp	0	; 0x0 <__tmp_reg__>
